{"version":3,"sources":["consumers/consumers.jsx","store/types/types.jsx","store/actions/consumerPokeApi.jsx","components/cardPokemon/CardPokemon.jsx","assets/images/bkg-pkm.png","components/cardDetail/CardDetail.jsx","pages/StartPage.jsx","routes/app.routes.js","store/reducer/PersonDataReducer.jsx","store/reducer/PokedexDataReducer.jsx","store/reducer/PokemonDataReducer.jsx","store/reducer/store.jsx","App.js","reportWebVitals.js","index.js"],"names":["ConsumerPokeApi","url","type","body","a","fetch","setHeaders","responce","json","data","method","headers","JSON","stringify","TYPES","personData","personError","pokedexData","pokedexError","pokemonData","pokemonError","searchPokemon","errorSearchPokemon","getPokemon","idPokemon","newUrl","replace","CardPokemon","props","useDispatch","entry_number","pokemon_species","useState","urlImg","seturlImg","useEffect","then","sprites","front_default","className","onClick","id","name","cardSelected","src","Grid","container","item","xs","CardDetail","artwork","types","order","height","weight","map","t","class","imgCenter","StartPage","dispatch","useSelector","state","pokedex","pokemon_filter","pokemon_entries","setpokedex","idPokedex","payload","document","console","log","pokemonSelected","pokemon","searchByName","fromValues","setFromValues","pkm","e","justifyContent","md","TextField","value","label","variant","fullWidth","onChange","event","target","alignItems","spacing","AppRoutes","exact","path","component","to","initialState","error","lastname","gender","bornDate","phone","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","person","action","results","first","last","filter","includes","base_experience","other","store","createStore","applyMiddleware","thunk","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d14734e5.chunk.js","sourcesContent":["export const ConsumerPokeApi = async (url, type, body) => {\r\n    let responce = await fetch(url, setHeaders(type, body))\r\n    let data = await responce.json();\r\n    return data;\r\n}\r\n\r\nfunction setHeaders (type, body) {\r\n    switch (type) {\r\n        case 'GET'   : return { method: type, headers: { 'Accept': 'application/json', 'Content-Type': 'application/json' } };\r\n        case 'POST'  : return { method: type, headers: { 'Accept': 'application/json', 'Content-Type': 'application/json' }, body: JSON.stringify(body) };\r\n        case 'PUT'   : return { method: type, headers: { 'Accept': 'application/json', 'Content-Type': 'application/json' }, body: JSON.stringify(body) };\r\n        case 'DELETE': return { method: type, headers: { 'Accept': 'application/json', 'Content-Type': 'application/json' }, body: JSON.stringify(body) };\r\n\r\n        default:\r\n            break;\r\n    }\r\n}","const TYPES = {\r\n    personData: '[getPersonData]',\r\n    personError: '[getDataWithError]',\r\n    pokedexData:  '[getPokedexData]',\r\n    pokedexError: '[getPokedexError]',\r\n    pokemonData:  '[getPokemonData]',\r\n    pokemonError: '[getPokemonError]',\r\n    searchPokemon: '[getSearchPÃ¶kemon]',\r\n    errorSearchPokemon : ['errorSearchPokemon']\r\n}\r\n\r\nexport default TYPES;","import { ConsumerPokeApi } from \"../../consumers/consumers\";\r\nimport TYPES from \"../types/types\";\r\n\r\nexport const getDataByApi = () => {\r\n    \r\n    return async (dispatch)  => {\r\n\r\n        try {\r\n            const data = await ConsumerPokeApi('https://randomuser.me/api ', 'GET')\r\n\r\n            dispatch({\r\n                type: TYPES.personData, payload: {data, document}\r\n            })\r\n        }\r\n\r\n        catch (e) {\r\n            dispatch({\r\n                type: TYPES.personError, payload: e\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAllPokemons = (idPokedex) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = await ConsumerPokeApi(`https://pokeapi.co/api/v2/pokedex/${idPokedex}/`, 'GET')     \r\n\r\n            dispatch({\r\n                type: TYPES.pokedexData, payload: {data, document}\r\n            })\r\n        }\r\n\r\n        catch (e) {\r\n            dispatch({\r\n                type: TYPES.pokedexError, payload: e\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getPokemon = async (idPokemon, url) => {\r\n\r\n    let newUrl = url.replace('pokemon-species', 'pokemon')\r\n        try {\r\n            const data = await ConsumerPokeApi(`${newUrl}`, 'GET')\r\n            return data;\r\n        }\r\n        catch (e) {            \r\n            return 'error';\r\n        }\r\n    \r\n}\r\n\r\nexport const getPokemonByName = (pkm) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({\r\n                type: TYPES.searchPokemon, payload: {document, pkm}\r\n            })\r\n        }\r\n\r\n        catch (e) {\r\n            dispatch({\r\n                type: TYPES.errorSearchPokemon, payload: e\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getPokemonDetail = (idPokemon) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = await ConsumerPokeApi(`https://pokeapi.co/api/v2/pokemon/${idPokemon}/`, 'GET')     \r\n\r\n            dispatch({\r\n                type: TYPES.pokemonData, payload: {data, document}\r\n            })\r\n        }\r\n\r\n        catch (e) {\r\n            dispatch({\r\n                type: TYPES.pokemonError, payload: e\r\n            })\r\n        }\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\r\nimport './styles.scss'\r\n\r\nimport { getPokemon } from '../../store/actions/consumerPokeApi';\r\nimport { Grid } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isNullLiteralTypeAnnotation } from '@babel/types';\r\n\r\nfunction CardPokemon(props) {\r\n\r\n    //console.log('props=> ', props)\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const { entry_number, pokemon_species } = props.data;\r\n    \r\n    const [urlImg, seturlImg] = useState('');\r\n\r\n    useEffect(() => {\r\n        getPokemon(entry_number, pokemon_species.url).then((data) => {   \r\n             \r\n            let url = data.sprites ? data.sprites.front_default : 'https://codigos-ascii.com/wp-content/uploads/abre-signo-admiracion-apertura-admiracion.png';\r\n            seturlImg(url);\r\n        } )\r\n    }, [props]);\r\n\r\n    const cardSelected = (id) => {\r\n        props.cardSelected(id)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='cardItem' onClick={()=>cardSelected(props.data.pokemon_species.name)}>\r\n                <div className='cardItem__image'>\r\n                    <img src={ urlImg } ></img>\r\n                </div>              \r\n                <Grid container className='cardItem__content'>\r\n                    <Grid item xs={6}>\r\n                        <div className='cardItem__name'>\r\n                            { pokemon_species.name }\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <div className='cardItem__number'>{ entry_number }</div>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardPokemon;","export default __webpack_public_path__ + \"static/media/bkg-pkm.21d437e1.png\";","import React, {useEffect, useState} from 'react';\r\nimport './styles.scss'\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport imgCenter from '../../assets/images/bkg-pkm.png';\r\n\r\nfunction CardDetail(props) {\r\n\r\n    //console.log('detail=> ', props)\r\n\r\n    const { artwork, name, types, order, height, weight } = props.data;\r\n    \r\n    return (\r\n        <>\r\n        {\r\n            order ? <div className='cardDetail'>\r\n                <div className='cardDetail__content-img'>\r\n                    <img src={artwork} />\r\n                </div>\r\n                <div className='cardDetail__content-order'>\r\n                    National Pokedex NÂ° {order}\r\n                </div>\r\n                <div className='cardDetail__content-name'>\r\n                    {name}\r\n                </div>\r\n                <div className='cardDetail__content-type'>\r\n                    {\r\n                        types ? types.map((t)=>{\r\n                            return (\r\n                                <span className={t.type.name}>{t.type.name}</span>\r\n                            )\r\n                        }):''\r\n                    }\r\n                </div>\r\n                <Grid container className='cardDetail__content-body'>\r\n                    <Grid item xs={6}>\r\n                        <div className=''>Height: { height/10 } m.</div>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <div className=''>Weight: { weight/10 } kg.</div>\r\n                    </Grid>\r\n                </Grid>\r\n            </div> :\r\n            <div className='cardDetail'>\r\n                <div class='cardDetail__default-img'>\r\n                    <img src= {imgCenter} />\r\n                </div>\r\n            </div>\r\n        }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default CardDetail;","import React, {Fragment, useEffect, useState} from 'react';\r\nimport {getAllPokemons, getPokemonDetail, getPokemonByName } from '../store/actions/consumerPokeApi'\r\n\r\nimport CardPokemon from '../components/cardPokemon/CardPokemon'\r\nimport CardDetail from '../components/cardDetail/CardDetail'\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Grid } from '@material-ui/core';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport './styles.scss'\r\n\r\nfunction StartPage() {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const { pokemon_entries, pokemon_filter } = useSelector(state => state.pokedex)\r\n\r\n    //console.log('pokemon_entries=> ', pokemon_entries)\r\n\r\n    const [pokedex, setpokedex] = useState(2)\r\n    \r\n    useEffect(() => {\r\n        dispatch(getAllPokemons(pokedex));\r\n        console.log('useEffect All Pokes')\r\n    }, [pokedex])\r\n\r\n    const changePokedex = (id) => {\r\n        setpokedex(id);\r\n    }\r\n\r\n    //const [pokemonSelected, setpokemonSelected] = useState(null);\r\n\r\n    const pokemonSelected = useSelector(state => state.pokemon);\r\n\r\n    const basePokedex = [\r\n        {\r\n            name: 'Kanto',\r\n            id: 2\r\n        }, {\r\n            name: 'Johto',\r\n            id: 3\r\n        }, {\r\n            name: 'Hoenn',\r\n            id: 4\r\n        }, {\r\n            name: 'Sinnoh',\r\n            id: 5\r\n        },  {\r\n            name: 'Unova',\r\n            id: 8\r\n        }, \r\n\r\n    ]\r\n\r\n    const cardSelected = (id) => {\r\n        dispatch(getPokemonDetail(id));\r\n      //  setpokemonSelected(useSelector(state => state.pokemon))\r\n    }\r\n\r\n    const [fromValues, setFromValues] = useState({\r\n        searchByName: \"\"\r\n    })\r\n\r\n    const { searchByName } = fromValues;\r\n\r\n    useEffect(() => {\r\n        dispatch(getPokemonByName(searchByName));\r\n        console.log('useEffect search pkm')\r\n    }, [searchByName])\r\n\r\n\r\n    const handleInputChange = (event) => {\r\n        console.log('find=> ', searchByName)\r\n\r\n        setFromValues({\r\n            ...fromValues,\r\n            [event.target.name]: event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    return(\r\n        <>\r\n\r\n            <div className='header'>\r\n\r\n                <table>\r\n                    <tr>\r\n                        <th class='header__logo'>\r\n                            <img src={'https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/International_Pok%C3%A9mon_logo.svg/2560px-International_Pok%C3%A9mon_logo.svg.png'} height='40px;'/>\r\n                        </th>\r\n                        <th className='header__item'>\r\n                            <div className='header__item-button'>\r\n                                API\r\n                            </div>\r\n                        </th>\r\n                    </tr>\r\n                </table>                \r\n\r\n            </div>\r\n            <div className='main-body'>\r\n                <Grid container justifyContent='center'>\r\n                \r\n                <Grid item md={7} xs={12}>\r\n                    <TextField\r\n                        id=\"searchByName\"\r\n                        name=\"searchByName\"\r\n                        value={searchByName}\r\n                        label=\"Nombre de pokemon\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid md={5} xs={12} justifyContent=\"center\" container alignItems=\"center\">\r\n                {\r\n                        basePokedex.map((item) => {\r\n                            return (\r\n                                <Grid xs={2} className='section-pkms'>\r\n                                    <div onClick={()=>changePokedex(item.id)} className={pokedex==item.id ? 'selected': ''}>{item.name}</div>\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n\r\n                <Grid container xs={12} md={7} spacing={2} className='cardsContainer' >\r\n                    {\r\n                        pokemon_filter ? pokemon_filter.map((item) => {\r\n                            return (\r\n                                <Grid justifyContent=\"center\"\r\n                                alignItems=\"center\" item md={4} xs={6} >\r\n                                    <CardPokemon data={item} cardSelected={cardSelected}/>\r\n                                </Grid>\r\n                            )\r\n                        }) : <div/>\r\n                    }\r\n                </Grid>\r\n                <Grid xs={12} md={5} justifyContent=\"center\" alignItems=\"center\" className='cardDetailContainer'>\r\n                    <CardDetail data={pokemonSelected}/>\r\n                </Grid> \r\n                </Grid>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StartPage;","import React from \"react\"\r\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport StartPage from '../pages/StartPage'\r\n\r\nexport const AppRoutes = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/start\" component={StartPage} />\r\n                <Redirect to=\"/start\"/>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}","import TYPES from '../types/types'\r\n\r\nconst initialState = {\r\n    error: null,\r\n    document: '',\r\n    name: '',\r\n    lastname: '',\r\n    gender: '',\r\n    bornDate: '',\r\n    phone: ''\r\n}\r\n\r\n\r\nexport const PersonDataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TYPES.personData:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                document: action.payload.document,\r\n                name: action.payload.data.results[0].name.first,\r\n                lastname: action.payload.data.results[0].name.last,\r\n                gender: action.payload.data.results[0].gender,\r\n                bornDate: '',\r\n                phone: action.payload.data.results[0].phone.replace('-','')\r\n\r\n        }\r\n\r\n        case TYPES.personError:\r\n            return {\r\n                ...initialState,\r\n                error: action.payload\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n","import TYPES from '../types/types'\r\n\r\nconst initialState = {\r\n    error: null,\r\n    name: '',\r\n    pokemon_entries: '',\r\n    pokemon_filter: ''\r\n}\r\n\r\n\r\nexport const PokedexDataReducer = (state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case TYPES.pokedexData:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                name: action.payload.data.name,\r\n                pokemon_entries: action.payload.data.pokemon_entries,\r\n                pokemon_filter: action.payload.data.pokemon_entries\r\n        }\r\n\r\n        case TYPES.pokedexError:\r\n            return {\r\n                ...initialState,\r\n                error: action.payload\r\n            }\r\n\r\n        case TYPES.searchPokemon:\r\n            {\r\n                console.log('state=> ', state)\r\n                console.log('action=> ', action)\r\n                return {\r\n                    ...state,\r\n                    error: null,\r\n                    pokemon_filter: state.pokemon_entries.filter((item) => {                        \r\n                        return item.pokemon_species.name.includes(action.payload.pkm)\r\n                    })\r\n                }\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n","import TYPES from '../types/types'\r\n\r\nconst initialState = {\r\n    error: null,\r\n    name: '',\r\n    front_default: ''\r\n}\r\n\r\n\r\nexport const PokemonDataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TYPES.pokemonData:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                name: action.payload.data.name,\r\n                front_default: action.payload.data.sprites.front_default,\r\n                types: action.payload.data.types,\r\n                base_experience: action.payload.data.base_experience,\r\n                artwork: action.payload.data.sprites.other[\"official-artwork\"].front_default,\r\n                order: action.payload.data.order,\r\n                weight: action.payload.data.weight,\r\n                height: action.payload.data.height\r\n        }\r\n\r\n        case TYPES.pokemonError:\r\n            return {\r\n                ...initialState,\r\n                error: action.payload\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux'\r\nimport { PersonDataReducer }  from \"./PersonDataReducer\";\r\nimport { PokedexDataReducer } from './PokedexDataReducer'; \r\nimport { PokemonDataReducer } from './PokemonDataReducer';\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst reducers = combineReducers({\r\n    person: PersonDataReducer,\r\n    pokedex: PokedexDataReducer,\r\n    pokemon: PokemonDataReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\nimport './App.scss';\n\nimport { AppRoutes } from './routes/app.routes'\nimport {Provider} from \"react-redux\";\n\n\nimport { store } from './store/reducer/store'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n        <AppRoutes/>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fontsource/roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}